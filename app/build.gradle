apply plugin: 'com.android.application'
if (file('fabric.properties').exists()) {
    apply plugin: 'io.fabric'
} else {
    logger.warn('File fabric.properties is missing. Fabric/Crashlytics will be unavailable.')
}

archivesBaseName = 'appmatrix'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "org.fbluemle.android.appmatrix"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode semverGitVersion.versionCode
        versionName semverGitVersion.versionName
    }
    def releaseProps = rootProject.file('release.properties')
    signingConfigs {
        release {
            if (releaseProps.exists()) {
                def props = new Properties()
                props.load(releaseProps.newDataInputStream())
                release {
                    storeFile props.storeFile as File
                    storePassword props.storePassword
                    keyAlias props.keyAlias
                    keyPassword props.keyPassword
                }
            }
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (releaseProps.exists()) {
                signingConfig signingConfigs.release
            }
        }
    }
    lintOptions {
        textOutput 'stdout'
        textReport true
        warningsAsErrors true
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(
                    output.outputFile.parent,
                    output.outputFile.name.replace(".apk", "-${version}.apk"))
        }
        if (variant.getBuildType().isMinifyEnabled()) {
            variant.assemble.doLast {
                copy {
                    from variant.mappingFile
                    into variant.mappingFile.parent
                    rename { String fileName ->
                        "mapping-${variant.name}-${version}.txt"
                    }
                }
            }
        }
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:25.1.1'
    compile 'com.android.support:design:25.1.1'
    compile 'com.google.firebase:firebase-core:10.0.1'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.6@aar') {
        transitive = true;
    }
}

if (file('google-services.json').exists() ||
        file('src/debug/google-services.json').exists() ||
        file('src/release/google-services.json').exists()) {
    apply plugin: 'com.google.gms.google-services'
} else {
    logger.warn('File google-services.json is missing. Google Services/Firebase will be unavailable.')
}
